package server_side;

//------------------------------------------------------------
//
// Implementation stub file
// 
// Target: _DbWorkImplBase
// Source: d:/programming/temp/erl/java/dbwork.idl
// IC vsn: 4.3
// 
// This file is automatically generated. DO NOT EDIT IT.
//
//------------------------------------------------------------


public abstract class _DbWorkImplBase implements DbWork {

    // Server data
    protected com.ericsson.otp.ic.Environment _env = null;

    // Constructors
    public _DbWorkImplBase() {
    }

    // Extracts caller identity
    public com.ericsson.otp.erlang.OtpErlangPid __getCallerPid() {
      return _env.getScaller();
    }

    public com.ericsson.otp.erlang.OtpErlangPid __getCallerPid(com.ericsson.otp.ic.Environment __env) {
      return __env.getScaller();
    }

    public boolean __isStopped() {
      return _env.isStopped();
    }

    public boolean __isStopped(com.ericsson.otp.ic.Environment __env) {
      return __env.isStopped();
    }

    // Operation dictionary
    private static java.util.Dictionary __operations = new java.util.Hashtable();
    static {
      __operations.put("hello", new java.lang.Integer(0));
      __operations.put("addNode", new java.lang.Integer(1));
      __operations.put("getNode", new java.lang.Integer(2));
      __operations.put("addRelationship", new java.lang.Integer(3));
      __operations.put("getRelationship", new java.lang.Integer(4));
      __operations.put("stop", new java.lang.Integer(5));
    }

    // Operation dictionary access
    public static java.util.Dictionary __operations() {
      return __operations;
    }

    // Operation invokation
    public com.ericsson.otp.erlang.OtpOutputStream invoke(com.ericsson.otp.erlang.OtpInputStream _in)
      throws java.lang.Exception {

       // Create a new environment if needed
      	if (_env == null)
      	  _env = new com.ericsson.otp.ic.Environment();

       // Unmarshal head
      	_env.uHead(_in);

      	// Switch over operation
      	return __switch(_env);
    }

     // Operation switch
     public com.ericsson.otp.erlang.OtpOutputStream __switch(com.ericsson.otp.ic.Environment __env)
       throws java.lang.Exception {

       // Setup streams and operation label
       com.ericsson.otp.erlang.OtpOutputStream __os = __env.getOs();
       __os.reset();
       int __label = __env.uLabel(__operations);

       // Switch over operation
       switch(__label) {

       case 0:  {  // Operation DbWork.hello

          // Calling implementation function
          java.lang.String _result = this.hello();

          // Marshaling output
          com.ericsson.otp.erlang.OtpErlangRef __ref = __env.getSref();
          __os.write_tuple_head(2);
          __os.write_ref(__ref.node(),__ref.ids(),__ref.creation());  // Call reference
          __os.write_string(_result);  // Return value


       } break;

       case 1:  {  // Operation DbWork.addNode

          // Preparing input
          com.ericsson.otp.erlang.OtpInputStream __is = __env.getIs();
          java.lang.String name = __is.read_string();  // In value

          // Calling implementation function
          java.lang.String _result = this.addNode(name);

          // Marshaling output
          com.ericsson.otp.erlang.OtpErlangRef __ref = __env.getSref();
          __os.write_tuple_head(2);
          __os.write_ref(__ref.node(),__ref.ids(),__ref.creation());  // Call reference
          __os.write_string(_result);  // Return value


       } break;

       case 2:  {  // Operation DbWork.getNode

          // Preparing input
          com.ericsson.otp.erlang.OtpInputStream __is = __env.getIs();
          java.lang.String name = __is.read_string();  // In value

          // Calling implementation function
          java.lang.String _result = this.getNode(name);

          // Marshaling output
          com.ericsson.otp.erlang.OtpErlangRef __ref = __env.getSref();
          __os.write_tuple_head(2);
          __os.write_ref(__ref.node(),__ref.ids(),__ref.creation());  // Call reference
          __os.write_string(_result);  // Return value


       } break;

       case 3:  {  // Operation DbWork.addRelationship

          // Preparing input
          com.ericsson.otp.erlang.OtpInputStream __is = __env.getIs();
          java.lang.String node1 = __is.read_string();  // In value
          java.lang.String node2 = __is.read_string();  // In value

          // Calling implementation function
          java.lang.String _result = this.addRelationship(node1, node2);

          // Marshaling output
          com.ericsson.otp.erlang.OtpErlangRef __ref = __env.getSref();
          __os.write_tuple_head(2);
          __os.write_ref(__ref.node(),__ref.ids(),__ref.creation());  // Call reference
          __os.write_string(_result);  // Return value


       } break;

       case 4:  {  // Operation DbWork.getRelationship

          // Preparing input
          com.ericsson.otp.erlang.OtpInputStream __is = __env.getIs();
          java.lang.String node1 = __is.read_string();  // In value
          java.lang.String node2 = __is.read_string();  // In value

          // Calling implementation function
          java.lang.String _result = this.getRelationship(node1, node2);

          // Marshaling output
          com.ericsson.otp.erlang.OtpErlangRef __ref = __env.getSref();
          __os.write_tuple_head(2);
          __os.write_ref(__ref.node(),__ref.ids(),__ref.creation());  // Call reference
          __os.write_string(_result);  // Return value


       } break;

       case 5: { // Standard stop operation

         __env.server_stop_server();

       } break;

       default: // It will never come down here 
         throw new java.lang.Exception("BAD OPERATION");

      }

      if(__os.count() > 0)
        return __os;

      return null;
    }

}
